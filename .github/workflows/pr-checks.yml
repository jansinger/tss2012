name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  pr-info:
    name: PR Information
    runs-on: ubuntu-latest
    steps:
      - name: PR Details
        run: |
          echo "PR #${{ github.event.pull_request.number }}"
          echo "Title: ${{ github.event.pull_request.title }}"
          echo "Author: ${{ github.event.pull_request.user.login }}"
          echo "Base: ${{ github.event.pull_request.base.ref }}"
          echo "Head: ${{ github.event.pull_request.head.ref }}"

  quick-tests:
    name: Quick Test Suite
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test
        env:
          CI: true

      - name: Test Summary
        if: always()
        run: |
          if [ $? -eq 0 ]; then
            echo "‚úÖ All tests passed!"
          else
            echo "‚ùå Some tests failed"
            exit 1
          fi

  test-coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    needs: quick-tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run coverage
        run: npm run test:coverage
        continue-on-error: true

      - name: Coverage Summary
        run: |
          echo "Coverage report generated"
          if [ -f coverage/coverage-summary.json ]; then
            cat coverage/coverage-summary.json
          fi

      - name: Comment coverage on PR
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const fs = require('fs');
            let coverageComment = '## üìä Test Coverage Report\n\n';

            try {
              const summary = JSON.parse(fs.readFileSync('coverage/coverage-summary.json', 'utf8'));
              const total = summary.total;

              coverageComment += '| Metric | Coverage |\n';
              coverageComment += '|--------|----------|\n';
              coverageComment += `| Lines | ${total.lines.pct}% |\n`;
              coverageComment += `| Statements | ${total.statements.pct}% |\n`;
              coverageComment += `| Functions | ${total.functions.pct}% |\n`;
              coverageComment += `| Branches | ${total.branches.pct}% |\n`;

            } catch (error) {
              coverageComment += '‚ö†Ô∏è Coverage report not available\n';
            }

            coverageComment += '\n_Generated by PR Checks workflow_';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: coverageComment
            });

  build-check:
    name: Build Verification
    runs-on: ubuntu-latest
    needs: quick-tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Verify build output
        run: |
          if [ ! -d "build" ]; then
            echo "‚ùå Build directory not found!"
            exit 1
          fi

          echo "‚úÖ Build directory created"
          echo "üì¶ Build size:"
          du -sh build/

          # Check for essential files
          if [ ! -f "build/index.html" ]; then
            echo "‚ö†Ô∏è Warning: index.html not found in build"
          fi

  type-check:
    name: TypeScript Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: TypeScript check
        run: npm run check
        continue-on-error: true

      - name: Report TypeScript issues
        if: failure()
        run: |
          echo "‚ö†Ô∏è TypeScript check found issues"
          echo "Run 'npm run check' locally to see details"

  all-checks-passed:
    name: ‚úÖ All Checks Passed
    runs-on: ubuntu-latest
    needs: [quick-tests, test-coverage, build-check, type-check]
    if: always()

    steps:
      - name: Check all jobs
        run: |
          echo "Quick Tests: ${{ needs.quick-tests.result }}"
          echo "Coverage: ${{ needs.test-coverage.result }}"
          echo "Build: ${{ needs.build-check.result }}"
          echo "TypeScript: ${{ needs.type-check.result }}"

          # Fail if critical jobs failed
          if [[ "${{ needs.quick-tests.result }}" == "failure" ]] || \
             [[ "${{ needs.build-check.result }}" == "failure" ]]; then
            echo "‚ùå Critical checks failed"
            exit 1
          fi

          echo "‚úÖ All critical checks passed! PR is ready for review."
